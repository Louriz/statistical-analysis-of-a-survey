graph = FALSE,
ncp = 10)
res.mca <-MCA(final_data,
quanti.sup = c(24,25,26,27,28),
quali.sup = c(22,23),
graph = FALSE,
ncp = 10)
print('Variables qualitatives supplémentaires')
res.mca$quali.sup
print('Variables quantitatives supplémentaires')
res.mca$quanti
print('Individus supplémentaires')
res.mca$ind.sup
# Biplot des individus et des variables
fviz_mca_biplot (res.mca, repel = TRUE,
ggtheme = theme_minimal (),
axes=c(3,3),invisible = "var"
)
# Biplot des individus et des variables
fviz_mca_biplot (res.mca, repel = TRUE,
ggtheme = theme_minimal (),
axes=c(1,2),invisible = "var"
)
# Biplot des individus et des variables
fviz_mca_biplot (res.mca, repel = TRUE,
ggtheme = theme_minimal (),
axes=c(1,1),invisible = "var"
)
res.mca <-MCA(final_data[-c(81),],
quanti.sup = c(24,25,26,27,28),
quali.sup = c(22,23),
graph = FALSE,
ncp = 10)
# Biplot des individus et des variables
fviz_mca_biplot (res.mca, repel = TRUE,
ggtheme = theme_minimal (),
axes=c(1,1),invisible = "var"
)
# Biplot des individus et des variables
fviz_mca_biplot (res.mca, repel = TRUE,
ggtheme = theme_minimal (),
axes=c(1,2),invisible = "var"
)
# Biplot des individus et des variables
fviz_mca_biplot (res.mca, repel = TRUE,
ggtheme = theme_minimal (),
axes=c(4,4),invisible = "var"
)
# Biplot des individus et des variables
fviz_mca_biplot (res.mca, repel = TRUE,
ggtheme = theme_minimal (),
axes=c(3,4),invisible = "var"
)
# Biplot des individus et des variables
fviz_mca_biplot (res.mca, repel = TRUE,
ggtheme = theme_minimal (),
axes=c(4,5),invisible = "var"
)
fviz_mca_var (res.mca, choice = "mca.cor",
repel = TRUE)
fviz_mca_var(res.mca, repel = TRUE,
ggtheme= theme_minimal(),select.var = list(cos2=0.3))
fviz_mca_var(res.mca, choice = "quanti.sup",
ggtheme = theme_minimal())
fviz_mca_var(res.mca, choice = "quanti.sup",
ggtheme = theme_minimal())
fviz_mca_var(res.mca, repel = TRUE,
ggtheme= theme_minimal(),select.var = list(cos2=0.6))
fviz_mca_var(res.mca, repel = TRUE,
ggtheme= theme_minimal(),select.var = list(cos2=0.2))
eig.val <- get_eigenvalue(res.mca)
eig.val
fviz_mca_var (res.mca, choice = "mca.cor",
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_var (res.mca, choice = "mca.cor", axes = c(4,5)
repel = TRUE)
fviz_mca_var (res.mca, choice = "mca.cor", axes = c(4,5),
repel = TRUE)
fviz_mca_var (res.mca, choice = "mca.cor", axes = c(7,8),
repel = TRUE)
fviz_mca_var (res.mca, choice = "mca.cor", axes = c(1,2),
repel = TRUE)
eig.val <- get_eigenvalue(res.mca)
eig.val[1:5]
eig.val <- get_eigenvalue(res.mca)
eig.val[1:5,]
eig.val <- get_eigenvalue(res.mca)
eig.val[1:10,]
fviz_mca_var(res.mca, repel = TRUE,
ggtheme= theme_minimal(),select.var = list(cos2=0.2))
fviz_mca_var(res.mca, repel = TRUE,
ggtheme= theme_minimal(),select.var = list(cos2=0.2))
fviz_mca_var (res.mca, choice = "mca.cor", axes = c(1,2),
repel = TRUE)
fviz_mca_var (res.mca, choice = "mca.cor", axes = c(1,2),
repel = TRUE)
fviz_mca_var(res.mca, choice = "quanti.sup",
ggtheme = theme_minimal())
eig.val <- get_eigenvalue(res.mca)
eig.val[1:15,]
eig.val <- get_eigenvalue(res.mca)
eig.val[1:10,]
library(FactoMineR)
library(factoextra)
# xlsx files
library(xlsx)
my_data <- read.xlsx("dataset.xlsx",sheetIndex = 1,as.data.frame = T,encoding = 'UTF-8')
my_col_names=c('date','a_suivi','performer_travail_projet_1','motivation_certificat_1','trouver_emploi_1','mooc_inclu_etude_1','edt_chargee_1','plateformes_connues','aide_financiere_1','prix_1','outils_exercices_1','sciences_donnees_1','informatique_1','sciences_physiques_1','business_1','arts_1','langues_1','sciences_sociales_1','performer_travail_projet','motivation_certificat','trouver_emploi','nbr_certificat','satisfait_gestion_temps','objectifs_atteints','satisfaction','vacances_etude','temps_alloue_cours','mooc_inclu_etude','edt_chargee','plateformes_utilisees','videos_cours','transcription','diapositives_cours','forum_discussion','examens_exercices','accompagnement_pedagogique','aides_financiere','prix','outils_exercice','sciences_donnees','informatique','sciences_physiques','business','arts','langues','sciences_sociales','sexe','pays','age','est_etudiant','niveau_actuel','formation','background','mail','commentaire')
colnames(my_data)<-my_col_names
my_data2$date<-NULL
my_data2$mail<-NULL
my_data2$commentaire<-NULL
library("dplyr")
#change from factor to numeric the feature : temps_alloue_cours
my_data2$temps_alloue_cours<-as.numeric(my_data2$temps_alloue_cours)
# Choisir que les personnes qui ont suivi des moocs et qu'ils l'ont terminé ou pas
data_suivi<-filter(my_data2,a_suivi  %in% c("Oui, je l'ai suivi mais je ne l'ai pas terminé", "Oui, je l'ai suivi et j'ai réussi" ))
#Supprimer chaque colonne qui est totalement des NaN ( en fait ce sont celle de la partie: jamais suivi)
data_suivi<-data_suivi[ , ! apply( data_suivi , 2 , function(x) all(is.na(x)) ) ]
data_suivi.active <- data_suivi[, c(   "motivation_certificat"   ,   "trouver_emploi",
"vacances_etude" ,                    "mooc_inclu_etude"      ,     "edt_chargee" ,
"videos_cours"      ,         "transcription"         ,     "diapositives_cours"  ,
"forum_discussion"   ,        "examens_exercices"   ,       "accompagnement_pedagogique", "aides_financiere" ,
"outils_exercice" ,           "sciences_donnees"    ,       "informatique" ,
"sciences_physiques" ,       "business"     ,              "arts"    ,                   "langues" ,
"sciences_sociales" ,
"est_etudiant" ,                          "formation"    ,              "background" )]
summary(data_suivi.active)
for (i in 1:24) {
plot(data_suivi.active[,i], main = colnames(data_suivi.active)[i],
ylab = "Count", col="steelblue", las = 2)
}
data_suivi.active <- data_suivi[, c(   "motivation_certificat"   ,   "trouver_emploi",
"vacances_etude" ,                    "mooc_inclu_etude"      ,     "edt_chargee" ,
"videos_cours"      ,         "transcription"         ,     "diapositives_cours"  ,
"forum_discussion"   ,        "examens_exercices"   ,       "accompagnement_pedagogique", "aides_financiere" ,
"outils_exercice" ,           "sciences_donnees"    ,       "informatique" ,
"sciences_physiques" ,       "business"     ,              "arts"    ,                   "langues" ,
"sciences_sociales" ,
"background" )]
# On va garder 10 composantes principale pour cette étude.
res.mca <- MCA (data_suivi.active, graph = FALSE,ncp = 10)
eig.val <- get_eigenvalue(res.mca)
eig.val
eig.val <- get_eigenvalue(res.mca)
eig.val[1:15,]
#change from factor to numeric the feature : temps_alloue_cours
my_data2$temps_alloue_cours<-as.numeric(my_data2$temps_alloue_cours)
# Choisir que les personnes qui ont suivi des moocs et qu'ils l'ont terminé ou pas
data_suivi<-filter(my_data2,a_suivi  %in% c("Oui, je l'ai suivi mais je ne l'ai pas terminé", "Oui, je l'ai suivi et j'ai réussi" ))
#Supprimer chaque colonne qui est totalement des NaN ( en fait ce sont celle de la partie: jamais suivi)
data_suivi<-data_suivi[ , ! apply( data_suivi , 2 , function(x) all(is.na(x)) ) ]
data_suivi.active <- data_suivi[, c(   "motivation_certificat"   ,   "trouver_emploi",
"vacances_etude" ,                    "mooc_inclu_etude"      ,     "edt_chargee" ,
"videos_cours"      ,         "transcription"         ,     "diapositives_cours"  ,
"forum_discussion"   ,        "examens_exercices"   ,       "accompagnement_pedagogique", "aides_financiere" ,
"outils_exercice" ,           "sciences_donnees"    ,       "informatique" ,
"sciences_physiques" ,       "business"     ,              "arts"    ,                   "langues" ,
"sciences_sociales" ,
"est_etudiant" ,                          "formation"    ,              "background" )]
summary(data_suivi.active)
data_suivi.active <- data_suivi[, c(   "motivation_certificat"   ,   "trouver_emploi",
"vacances_etude" ,                    "mooc_inclu_etude"      ,     "edt_chargee" ,
"videos_cours"      ,         "transcription"         ,     "diapositives_cours"  ,
"forum_discussion"   ,        "examens_exercices"   ,       "accompagnement_pedagogique", "aides_financiere" ,
"outils_exercice" ,           "sciences_donnees"    ,       "informatique" ,
"sciences_physiques" ,       "business"     ,              "arts"    ,                   "langues" ,
"sciences_sociales" ,
"est_etudiant" ,                          "formation"    ,              "background" )]
str(data_suivi.active)
summary(data_suivi.active)
for (i in 1:24) {
plot(data_suivi.active[,i], main = colnames(data_suivi.active)[i],
ylab = "Count", col="steelblue", las = 2)
}
data_suivi.active <- data_suivi[, c(   "motivation_certificat"   ,   "trouver_emploi",
"vacances_etude" ,                    "mooc_inclu_etude"      ,     "edt_chargee" ,
"videos_cours"      ,         "transcription"         ,     "diapositives_cours"  ,
"forum_discussion"   ,        "examens_exercices"   ,       "accompagnement_pedagogique", "aides_financiere" ,
"outils_exercice" ,           "sciences_donnees"    ,       "informatique" ,
"sciences_physiques" ,       "business"     ,              "arts"    ,                   "langues" ,
"sciences_sociales" ,
"background" )]
# On va garder 10 composantes principale pour cette étude.
res.mca <- MCA (data_suivi.active, graph = FALSE,ncp = 10)
eig.val <- get_eigenvalue(res.mca)
eig.val[1:15,]
# xlsx files
library(xlsx)
my_data <- read.xlsx("dataset.xlsx",sheetIndex = 1,as.data.frame = T,encoding = 'UTF-8')
my_col_names=c('date','a_suivi','performer_travail_projet_1','motivation_certificat_1','trouver_emploi_1','mooc_inclu_etude_1','edt_chargee_1','plateformes_connues','aide_financiere_1','prix_1','outils_exercices_1','sciences_donnees_1','informatique_1','sciences_physiques_1','business_1','arts_1','langues_1','sciences_sociales_1','performer_travail_projet','motivation_certificat','trouver_emploi','nbr_certificat','satisfait_gestion_temps','objectifs_atteints','satisfaction','vacances_etude','temps_alloue_cours','mooc_inclu_etude','edt_chargee','plateformes_utilisees','videos_cours','transcription','diapositives_cours','forum_discussion','examens_exercices','accompagnement_pedagogique','aides_financiere','prix','outils_exercice','sciences_donnees','informatique','sciences_physiques','business','arts','langues','sciences_sociales','sexe','pays','age','est_etudiant','niveau_actuel','formation','background','mail','commentaire')
colnames(my_data)<-my_col_names
my_data2$date<-NULL
my_data2$mail<-NULL
my_data2$commentaire<-NULL
library("dplyr")
#change from factor to numeric the feature : temps_alloue_cours
my_data2$temps_alloue_cours<-as.numeric(my_data2$temps_alloue_cours)
#change from factor to numeric the feature : temps_alloue_cours
my_data2$temps_alloue_cours<-as.numeric(my_data2$temps_alloue_cours)
# Choisir que les personnes qui ont suivi des moocs et qu'ils l'ont terminé ou pas
data_suivi<-filter(my_data2,a_suivi  %in% c("Oui, je l'ai suivi mais je ne l'ai pas terminé", "Oui, je l'ai suivi et j'ai réussi" ))
#Supprimer chaque colonne qui est totalement des NaN ( en fait ce sont celle de la partie: jamais suivi)
data_suivi<-data_suivi[ , ! apply( data_suivi , 2 , function(x) all(is.na(x)) ) ]
data_suivi.active <- data_suivi[, c(   "motivation_certificat"   ,   "trouver_emploi",
"vacances_etude" ,                    "mooc_inclu_etude"      ,     "edt_chargee" ,
"videos_cours"      ,         "transcription"         ,     "diapositives_cours"  ,
"forum_discussion"   ,        "examens_exercices"   ,       "accompagnement_pedagogique", "aides_financiere" ,
"outils_exercice" ,           "sciences_donnees"    ,       "informatique" ,
"sciences_physiques" ,       "business"     ,              "arts"    ,                   "langues" ,
"sciences_sociales" ,
"est_etudiant" ,                          "formation"    ,              "background" )]
summary(data_suivi.active)
for (i in 1:24) {
plot(data_suivi.active[,i], main = colnames(data_suivi.active)[i],
ylab = "Count", col="steelblue", las = 2)
}
library(FactoMineR)
library(factoextra)
# xlsx files
library(xlsx)
my_data <- read.xlsx("dataset.xlsx",sheetIndex = 1,as.data.frame = T,encoding = 'UTF-8')
my_col_names=c('date','a_suivi','performer_travail_projet_1','motivation_certificat_1','trouver_emploi_1','mooc_inclu_etude_1','edt_chargee_1','plateformes_connues','aide_financiere_1','prix_1','outils_exercices_1','sciences_donnees_1','informatique_1','sciences_physiques_1','business_1','arts_1','langues_1','sciences_sociales_1','performer_travail_projet','motivation_certificat','trouver_emploi','nbr_certificat','satisfait_gestion_temps','objectifs_atteints','satisfaction','vacances_etude','temps_alloue_cours','mooc_inclu_etude','edt_chargee','plateformes_utilisees','videos_cours','transcription','diapositives_cours','forum_discussion','examens_exercices','accompagnement_pedagogique','aides_financiere','prix','outils_exercice','sciences_donnees','informatique','sciences_physiques','business','arts','langues','sciences_sociales','sexe','pays','age','est_etudiant','niveau_actuel','formation','background','mail','commentaire')
colnames(my_data)<-my_col_names
my_data2$date<-NULL
my_data2$mail<-NULL
my_data2$commentaire<-NULL
library("dplyr")
#change from factor to numeric the feature : temps_alloue_cours
my_data2$temps_alloue_cours<-as.numeric(my_data2$temps_alloue_cours)
# Choisir que les personnes qui ont suivi des moocs et qu'ils l'ont terminé ou pas
data_suivi<-filter(my_data2,a_suivi  %in% c("Oui, je l'ai suivi mais je ne l'ai pas terminé", "Oui, je l'ai suivi et j'ai réussi" ))
#Supprimer chaque colonne qui est totalement des NaN ( en fait ce sont celle de la partie: jamais suivi)
data_suivi<-data_suivi[ , ! apply( data_suivi , 2 , function(x) all(is.na(x)) ) ]
data_suivi.active <- data_suivi[, c(   "motivation_certificat"   ,   "trouver_emploi",
"vacances_etude" ,                    "mooc_inclu_etude"      ,     "edt_chargee" ,
"videos_cours"      ,         "transcription"         ,     "diapositives_cours"  ,
"forum_discussion"   ,        "examens_exercices"   ,       "accompagnement_pedagogique", "aides_financiere" ,
"outils_exercice" ,           "sciences_donnees"    ,       "informatique" ,
"sciences_physiques" ,       "business"     ,              "arts"    ,                   "langues" ,
"sciences_sociales" ,
"est_etudiant" ,                          "formation"    ,              "background" )]
summary(data_suivi.active)
data_suivi.active <- data_suivi[, c(   "motivation_certificat"   ,   "trouver_emploi",
"vacances_etude" ,                    "mooc_inclu_etude"      ,     "edt_chargee" ,
"videos_cours"      ,         "transcription"         ,     "diapositives_cours"  ,
"forum_discussion"   ,        "examens_exercices"   ,       "accompagnement_pedagogique", "aides_financiere" ,
"outils_exercice" ,           "sciences_donnees"    ,       "informatique" ,
"sciences_physiques" ,       "business"     ,              "arts"    ,                   "langues" ,
"sciences_sociales" ,
"background" )]
str(data_suivi.active
)
# On va garder 10 composantes principale pour cette étude.
res.mca <- MCA (data_suivi.active, graph = FALSE,ncp = 10)
eig.val <- get_eigenvalue(res.mca)
eig.val[1:15,]
eig.val <- get_eigenvalue(res.mca)
eig.val[1:15,]
# Coordonnées
print('les coordonnées :')
head(var$coord)
# Cos2: qualité de représentation
print('la qualité de représentation :')
head(var$cos2)
# Contributions aux axes
print('la contribution des variables :')
head(var$contrib)
fviz_mca_var (res.mca, choice = "mca.cor",
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_var (res.mca, choice = "mca.cor",
repel = TRUE,
ggtheme = theme_minimal ())
head(round(var$coord, 2), 4)
fviz_mca_var (res.mca,
repel = TRUE,
axes=c(1,2),
ggtheme = theme_minimal (),select.var = list(cos2=0.25))
fviz_mca_var (res.mca,
repel = TRUE,
axes=c(3,4),
ggtheme = theme_minimal (),select.var = list(cos2=0.22))
head(var$cos2, 4)
# Colorer en fonction du cos2
fviz_mca_var(res.mca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
select.var = list(cos2=0.25),
ggtheme = theme_minimal())
# Cos2 des variable sur Dim.1 et Dim.2
fviz_cos2(res.mca, choice = "var", axes = 1:2,top = 10)
# Colorer en fonction du cos2
fviz_mca_var(res.mca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
axes=c(3,4),
select.var = list(cos2=0.20),
ggtheme = theme_minimal())
head(round(var$contrib,2), 4)
# Contributions des variables à la dimension 1
fviz_contrib (res.mca, choice = "var", axes = 1, top = 25)
# Contributions des variables à la dimension 2
fviz_contrib (res.mca, choice = "var", axes = 2, top = 25)
# Contribution totale aux dimensions 1 et 2
fviz_contrib(res.mca, choice = "var", axes = 1:2, top = 25)
fviz_mca_var(res.mca, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
select.var = list(contrib=7.5),
ggtheme = theme_minimal()
)
fviz_mca_var(res.mca, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
axes=c(3,4),
select.var = list(contrib=7.5),
ggtheme = theme_minimal()
)
print(' Coordonnées')
head(ind$coord)
print(' Qualité de representation')
head(ind$cos2)
print('Contributions')
head(ind$contrib)
fviz_mca_ind(res.mca, repel = TRUE,axes = c(1,2))
fviz_mca_ind(res.mca, repel = TRUE,axes = c(3,4))
fviz_mca_ind(res.mca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal())
fviz_mca_ind(res.mca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
axes=c(3,4),
ggtheme = theme_minimal())
# Cos2 des lignes sur Dim.1 et Dim.2
fviz_cos2(res.mca, choice = "ind", axes = 1:2,las=2,top = 20)
# Cos2 des lignes sur Dim.1 et Dim.2
fviz_cos2(res.mca, choice = "ind", axes = 3:4,las=2,top = 20)
final_data<- data_suivi[, c("motivation_certificat", "trouver_emploi","vacances_etude" ,"mooc_inclu_etude","edt_chargee" ,"videos_cours" , "transcription"  ,  "diapositives_cours"  ,
"forum_discussion" ,  "examens_exercices"  ,    "accompagnement_pedagogique", "aides_financiere" ,
"outils_exercice" ,   "sciences_donnees" ,"informatique" ,"sciences_physiques" , "business"  ,  "arts","langues" ,"sciences_sociales" ,"background","sexe","a_suivi","age","prix","satisfaction","temps_alloue_cours","nbr_certificat")]
res.mca <-MCA(final_data[-c(81),],
quanti.sup = c(24,25,26,27,28),
quali.sup = c(22,23),
graph = FALSE,
ncp = 10)
eig.val <- get_eigenvalue(res.mca)
eig.val[1:10,]
fviz_mca_var (res.mca, choice = "mca.cor",
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_var(res.mca, repel = TRUE,
ggtheme= theme_minimal(),select.var = list(cos2=0.2))
# Biplot des individus et des variables
fviz_mca_biplot (res.mca, repel = TRUE,
ggtheme = theme_minimal (),
axes=c(1,2),invisible = "var"
)
fviz_mca_var (res.mca, choice = "mca.cor", axes = c(1,2),
repel = TRUE)
fviz_mca_var(res.mca, choice = "quanti.sup",
ggtheme = theme_minimal())
library(FactoMineR)
library(factoextra)
# xlsx files
library(xlsx)
my_data <- read.xlsx("dataset.xlsx",sheetIndex = 1,as.data.frame = T,encoding = 'UTF-8')
my_col_names=c('date','a_suivi','performer_travail_projet_1','motivation_certificat_1','trouver_emploi_1','mooc_inclu_etude_1','edt_chargee_1','plateformes_connues','aide_financiere_1','prix_1','outils_exercices_1','sciences_donnees_1','informatique_1','sciences_physiques_1','business_1','arts_1','langues_1','sciences_sociales_1','performer_travail_projet','motivation_certificat','trouver_emploi','nbr_certificat','satisfait_gestion_temps','objectifs_atteints','satisfaction','vacances_etude','temps_alloue_cours','mooc_inclu_etude','edt_chargee','plateformes_utilisees','videos_cours','transcription','diapositives_cours','forum_discussion','examens_exercices','accompagnement_pedagogique','aides_financiere','prix','outils_exercice','sciences_donnees','informatique','sciences_physiques','business','arts','langues','sciences_sociales','sexe','pays','age','est_etudiant','niveau_actuel','formation','background','mail','commentaire')
colnames(my_data)<-my_col_names
## j'ai nettoyé les lignes à la main donc on prend tout les lignes
my_data2<-my_data[c(1:nrow(my_data)),]
my_data2$date<-NULL
my_data2$mail<-NULL
my_data2$commentaire<-NULL
library("dplyr")
#change from factor to numeric the feature : temps_alloue_cours
my_data2$temps_alloue_cours<-as.numeric(my_data2$temps_alloue_cours)
# Choisir que les personnes qui ont suivi des moocs et qu'ils l'ont terminé ou pas
data_suivi<-filter(my_data2,a_suivi  %in% c("Oui, je l'ai suivi mais je ne l'ai pas terminé", "Oui, je l'ai suivi et j'ai réussi" ))
#Supprimer chaque colonne qui est totalement des NaN ( en fait ce sont celle de la partie: jamais suivi)
data_suivi<-data_suivi[ , ! apply( data_suivi , 2 , function(x) all(is.na(x)) ) ]
data_suivi.active <- data_suivi[, c(   "motivation_certificat"   ,   "trouver_emploi",
"vacances_etude" ,                    "mooc_inclu_etude"      ,     "edt_chargee" ,
"videos_cours"      ,         "transcription"         ,     "diapositives_cours"  ,
"forum_discussion"   ,        "examens_exercices"   ,       "accompagnement_pedagogique", "aides_financiere" ,
"outils_exercice" ,           "sciences_donnees"    ,       "informatique" ,
"sciences_physiques" ,       "business"     ,              "arts"    ,                   "langues" ,
"sciences_sociales" ,
"est_etudiant" ,                          "formation"    ,              "background" )]
str(data_suivi.active)
summary(data_suivi.active)
data_suivi.active <- data_suivi[, c(   "motivation_certificat"   ,   "trouver_emploi",
"vacances_etude" ,                    "mooc_inclu_etude"      ,     "edt_chargee" ,
"videos_cours"      ,         "transcription"         ,     "diapositives_cours"  ,
"forum_discussion"   ,        "examens_exercices"   ,       "accompagnement_pedagogique", "aides_financiere" ,
"outils_exercice" ,           "sciences_donnees"    ,       "informatique" ,
"sciences_physiques" ,       "business"     ,              "arts"    ,                   "langues" ,
"sciences_sociales" ,
"background" )]
str(data_suivi.active
)
# On va garder 10 composantes principale pour cette étude.
res.mca <- MCA (data_suivi.active, graph = FALSE,ncp = 10)
eig.val <- get_eigenvalue(res.mca)
eig.val[1:15,]
# Coordonnées
print('les coordonnées :')
head(var$coord)
# Cos2: qualité de représentation
print('la qualité de représentation :')
head(var$cos2)
# Contributions aux axes
print('la contribution des variables :')
head(var$contrib)
fviz_mca_var (res.mca, choice = "mca.cor",
repel = TRUE,
ggtheme = theme_minimal ())
head(round(var$coord, 2), 4)
fviz_mca_var (res.mca,
repel = TRUE,
axes=c(1,2),
ggtheme = theme_minimal (),select.var = list(cos2=0.25))
fviz_mca_var (res.mca,
repel = TRUE,
axes=c(3,4),
ggtheme = theme_minimal (),select.var = list(cos2=0.22))
head(var$cos2, 4)
# Colorer en fonction du cos2
fviz_mca_var(res.mca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
select.var = list(cos2=0.25),
ggtheme = theme_minimal())
# Cos2 des variable sur Dim.1 et Dim.2
fviz_cos2(res.mca, choice = "var", axes = 1:2,top = 10)
# Colorer en fonction du cos2
fviz_mca_var(res.mca, col.var = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
axes=c(3,4),
select.var = list(cos2=0.20),
ggtheme = theme_minimal())
head(round(var$contrib,2), 4)
# Contributions des variables à la dimension 1
fviz_contrib (res.mca, choice = "var", axes = 1, top = 25)
# Contributions des variables à la dimension 2
fviz_contrib (res.mca, choice = "var", axes = 2, top = 25)
# Contribution totale aux dimensions 1 et 2
fviz_contrib(res.mca, choice = "var", axes = 1:2, top = 25)
fviz_mca_var(res.mca, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
select.var = list(contrib=7.5),
ggtheme = theme_minimal()
)
fviz_mca_var(res.mca, col.var = "contrib",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
axes=c(3,4),
select.var = list(contrib=7.5),
ggtheme = theme_minimal()
)
ind <- get_mca_ind (res.mca)
ind
print(' Coordonnées')
head(ind$coord)
print(' Qualité de representation')
head(ind$cos2)
print('Contributions')
head(ind$contrib)
fviz_mca_ind(res.mca, repel = TRUE,axes = c(1,2))
fviz_mca_ind(res.mca, repel = TRUE,axes = c(3,4))
fviz_mca_ind(res.mca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
ggtheme = theme_minimal())
fviz_mca_ind(res.mca, col.ind = "cos2",
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = TRUE,
axes=c(3,4),
ggtheme = theme_minimal())
# Cos2 des lignes sur Dim.1 et Dim.2
fviz_cos2(res.mca, choice = "ind", axes = 1:2,las=2,top = 20)
# Cos2 des lignes sur Dim.1 et Dim.2
fviz_cos2(res.mca, choice = "ind", axes = 3:4,las=2,top = 20)
final_data<- data_suivi[, c("motivation_certificat", "trouver_emploi","vacances_etude" ,"mooc_inclu_etude","edt_chargee" ,"videos_cours" , "transcription"  ,  "diapositives_cours"  ,
"forum_discussion" ,  "examens_exercices"  ,    "accompagnement_pedagogique", "aides_financiere" ,
"outils_exercice" ,   "sciences_donnees" ,"informatique" ,"sciences_physiques" , "business"  ,  "arts","langues" ,"sciences_sociales" ,"background","sexe","a_suivi","age","prix","satisfaction","temps_alloue_cours","nbr_certificat")]
res.mca <-MCA(final_data[-c(81),],
quanti.sup = c(24,25,26,27,28),
quali.sup = c(22,23),
graph = FALSE,
ncp = 10)
eig.val <- get_eigenvalue(res.mca)
eig.val[1:10,]
fviz_mca_var (res.mca, choice = "mca.cor",
repel = TRUE,
ggtheme = theme_minimal ())
fviz_mca_var(res.mca, repel = TRUE,
ggtheme= theme_minimal(),select.var = list(cos2=0.2))
# Biplot des individus et des variables
fviz_mca_biplot (res.mca, repel = TRUE,
ggtheme = theme_minimal (),
axes=c(1,2),invisible = "var"
)
fviz_mca_var (res.mca, choice = "mca.cor", axes = c(1,2),
repel = TRUE)
fviz_mca_var(res.mca, choice = "quanti.sup",
ggtheme = theme_minimal())
